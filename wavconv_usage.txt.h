const char *usage =
"WavConv\n"
"=======\n"
"Wave format conversion tool. Does sample rate conversion, may change sample\n"
"type and cut a part of a wave.\n"
"\n"
"This utility is a part of AC3Filter project (http://ac3filter.net)\n"
"Copyright (c) 2008-2012 by Alexander Vigovsky\n"
"\n"
"Usage:\n"
"  > wavconv input.wav output.wav [options]\n"
"\n"
"Options:\n"
"  input.wav  - input file\n"
"  output.wav - file to write the result to\n"
"\n"
"  Sample rate conversion:\n"
"    -r[ate]:N\n"
"      New sample rate (deafult: do not change).\n"
"\n"
"    -q[uality]:N\n"
"      Passband width (default: 0.99).\n"
"\n"
"    -a[ttenuation]:N\n"
"      Stopband attenuation in dB (default: 100).\n"
"\n"
"  Format conversion:\n"
"    -f[ormat]\n"
"      Change the sample format. Supported sample types:\n"
"      pcm16, pcm24, pcm32, pcm_float, pcm_double\n"
"\n"
"  Cutting:\n"
"    -cut_start:N\n"
"      Time in seconds of the starting point. Start of the file by default.\n"
"\n"
"    -cut_end:N\n"
"      Time in seconds of the ending point. End of the file by default.\n"
"\n"
"  -g[ain]\n"
"    Gain to apply to the result\n"
"\n"
"Notes:\n"
"  Dithering is applied when sample rate conversion occurs or sample type is\n"
"  converted to an integer type with lower precision (24bit -> 16bit for\n"
"  instance).\n"
"\n"
"  Automatic gain control prevents overflows.\n"
"\n"
"Examples:\n"
"  High-quality resample:\n"
"  > wavconv input.wav output.wav -r:44100 -q:0.999 -a:150\n"
"\n"
"  Passband width in this example is 0.999. This means that only uppper 22Hz\n"
"  of the destination bandwidth (22028Hz - 22050Hz) will be distorted. Note,\n"
"  that attenuation is large here. Such attenuation is only sensible for at\n"
"  least 24bit files.\n"
"\n"
"  Sample type conversion:\n"
"  > wavconv input.wav output.wav -format:pcm_float -gain:-6\n"
"\n"
"  Convert sample format to floating-point and decrease gain by 6dB.\n"
"\n"
"  Cutting:\n"
"  > wavconv input.wav output.wav -cut_start:1.18 -cut_end:5\n"
"\n"
"  Writes a part of the input.wav in between of 1.18sec and 5sec to output.wav.\n"
"\n"
"  All at once:\n"
"  > wavconv in.wav out.wav -cut_start:120 -cut_end:600 -r:44100 -g:3 -f:pcm16\n"
"\n"
"  Cuts a part of the input file in between of 2min and 5min, converts it to\n"
"  PCM16 44100Hz format, gains the result by +3dB, applies dithering and checks\n"
"  for overflows.\n"
;
