const char *usage =
"Bitstream converter\n"
"===================\n"
"This utility conversts files between numerous MPA/AC3/DTS stream types:\n"
"SPDIF padded, 8/14/16bit big/low endian. By default, it converts any\n"
"stream type to the most common byte stream.\n"
"\n"
"This utility is a part of AC3Filter project (http://ac3filter.net)\n"
"Copyright (c) 2007-2011 by Alexander Vigovsky\n"
"\n"
"Usage:\n"
"  Detect file type and print file information:\n"
"  > bsconvert input_file\n"
"\n"
"  Convert a file:\n"
"  > bsconvert input_file output_file [format]\n"
"\n"
"Options:\n"
"  input_file  - file to convert\n"
"  output_file - file to write result to\n"
"  format      - output file format:\n"
"    8     - byte stream (default)\n"
"    16le  - 16bit low endian\n"
"    14be  - 14bit big endian (DTS only)\n"
"    14le  - 14bit low endian (DTS only)\n"
"\n"
"Notes:\n"
"  File captured from SPDIF input may contain several parts of different type.\n"
"  For example SPDIF transmission may be started with 5.1 ac3 format then\n"
"  switch to 5.1 dts and then to stereo ac3. In this case all stream parts\n"
"  will be converted and writed to the same output file\n"
"\n"
"  SPDIF stream is padded with zeros, therefore output file size may be MUCH\n"
"  smaller than input. It is normal and this does not mean that some data was\n"
"  lost. This conversion is loseless! You can recreate SPDIF stream back with\n"
"  'spdifer' utility.\n"
"\n"
"  14bit streams are supported only for DTS format. Note, that conversion\n"
"  between 14bit and non-14bit changes actual frame size (frame interval),\n"
"  but does not change the frame header.\n"
;
